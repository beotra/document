1.Requirements
pip install paddlepaddle-gpu
cd PaddleOCR
pip install -r requirements.txt
pip install -r ppstructure/kie/requirements.txt
pip install paddleocr -U
cd PaddleDetection
pip install -r requirements.txt
python setup.py install 
pip install paddlenlp

2.pretrained_model 
Text Detection:       ch_PP-OCRv3_det_infer
Text Recognition:     ch_PP-OCRv3_rec_infer
Table Recognition:    ch_ppstructure_mobile_v2.0_SLANet_infer
Layout Analysis:      picodet_lcnet_x1_0_fgd_layout_infer
RE:                   re_vi_layoutxlm_xfund_pretrained
SER:                  ser_vi_layoutxlm_xfund_pretrained

3.weight
Layout Analyis:       picodet_lcnet_x1_0_layout

3.Layout Analysis 
#di chuyển tới thư mục 
cd PaddleDetection 
#dùng weight tự train 
python3 tools/infer.py \
    -c configs/picodet/legacy_model/application/layout_analysis/picodet_lcnet_x1_0_layout.yml \
    -o weights=../weight/picodet_lcnet_x1_0_layout/best_model.pdparams \
    --infer_img='docs/images/layout.jpg' \
    --output_dir=output_dir/ \
    --draw_threshold=0.5
    
#dùng pretrained_model 
python3 tools/infer.py \
    -c configs/picodet/legacy_model/application/layout_analysis/picodet_lcnet_x1_0_layout.yml \
    -o weights=../pretrained_model/picodet_lcnet_x1_0_fgd_layout.pdparams \
    --infer_img='docs/images/layout.jpg' \
    --output_dir=output_dir/ \
    --draw_threshold=0.5
#dùng hàm để gọi 
from PaddleDetection.tools.infer import layout_analysis_function
results=layout_analysis_function('PaddleDetection/configs/picodet/legacy_model/application/layout_analysis/picodet_lcnet_x1_0_layout.yml','weight/picodet_lcnet_x1_0_layout/best_model.pdparams','PaddleDetection/docs/images/layout.jpg')
print(results)

4.Table Recognition 
cd PaddleOCR/ppstructure 
python table/predict_table.py \
    --det_model_dir=../../inference/ch_PP-OCRv3_det_infer \
    --rec_model_dir=../../inference/ch_PP-OCRv3_rec_infer  \
    --table_model_dir=../../inference/ch_ppstructure_mobile_v2.0_SLANet_infer \
    --rec_char_dict_path=../ppocr/utils/ppocr_keys_v1.txt \
    --table_char_dict_path=../ppocr/utils/dict/table_structure_dict_ch.txt \
    --image_dir=docs/table/table.jpg \
    --output=../output/table
#dùng hàm để gọi 
from PaddleOCR.ppstructure.table.predict_table import predict_table_function
results=predict_table_function("PaddleOCR/ppstructure/inference/ch_PP-OCRv3_det_infer","PaddleOCR/ppstructure/inference/ch_PP-OCRv3_rec_infer","PaddleOCR/ppstructure/inference/ch_ppstructure_mobile_v2.0_SLANet_infer","PaddleOCR/ppocr/utils/ppocr_keys_v1.txt","PaddleOCR/ppocr/utils/dict/table_structure_dict_ch.txt","PaddleOCR/ppstructure/docs/table/table.jpg","PaddleOCR/output/table")
print(results)


5.Key Information Extraction(KIE) 
#làm lại thư mục dữ liệu: 1 folder ảnh, 1 file jsonl có n dòng, 1 đối tượng được lưu trong file piclke là 1 list có n phần tử(mỗi phần tử là 1 list(chuỗi tên ảnh, chuỗi nhãn dict)=>sửa lại load data trong file simple_dataset.py

a.Text detection + text recognition + semantic entity recognition (SER)
#infer 
cd PaddleOCR/ppstructure 
python3 kie/predict_kie_token_ser.py \
  --kie_algorithm=LayoutXLM \
  --ser_model_dir=../../inference/ser_vi_layoutxlm_xfund_infer \
  --image_dir=./docs/kie/input/zh_val_42.jpg \
  --ser_dict_path=../ppocr/utils/dict/kie_dict/xfund_class_list.txt \
  --vis_font_path=../doc/fonts/simfang.ttf \
  --ocr_order_method="tb-yx"
#dùng hàm để gọi
from PaddleOCR.ppstructure.kie.predict_kie_token_ser import predict_kie_token_ser_function
image_dir='PaddleOCR/train_data/XFUND/zh_val/image/82092117.png'
vis_font_path='PaddleOCR/doc/fonts/simfang.ttf'
ser_model_dir='PaddleOCR/inference/ser_vi_layoutxlm'
ser_dict_path='PaddleOCR/ppocr/utils/dict/kie_dict/xfund_class_list.txt'

import cv2
image_file = "PaddleOCR/train_data/XFUND/zh_val/image/82092117.png"
img = cv2.imread(image_file)


ser_res=predict_kie_token_ser_function(image_dir,vis_font_path,ser_model_dir,ser_dict_path,img)

image_dir="PaddleOCR/ppstructure/docs/kie/input/zh_val_42.jpg"
image_dir="PaddleOCR/ppstructure/docs/kie/input/82092117.png"

b.Text detection + text recognition + semantic entity recognition (SER) + relationship extraction (RE)
cd PaddleOCR/ppstructure 
python3 kie/predict_kie_token_ser_re.py \
  --kie_algorithm=LayoutXLM \
  --re_model_dir=../../inference/re_vi_layoutxlm_xfund_infer \
  --ser_model_dir=../../inference/ser_vi_layoutxlm_xfund_infer \
  --use_visual_backbone=False \
  --image_dir=./docs/kie/input/zh_val_42.jpg \
  --ser_dict_path=../train_data/XFUND/class_list_xfun.txt \
  --vis_font_path=../doc/fonts/simfang.ttf \
  --ocr_order_method="tb-yx"